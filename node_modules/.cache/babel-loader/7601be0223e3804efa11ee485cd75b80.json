{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carlosabreu/Desktop/react-photo-search/src/searchPhotos.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\nimport React, { useState } from 'react';\nimport Unsplash, { toJson } from 'unsplash-js'; //toJson is a helper function in the unsplash-js library that is used to convert the response into JSON format.\n\nconst unsplash = new Unsplash({\n  accessKey: \"fh5tKV6AI5-k6RljpGlqQVWy8z0aVe7PZzlmKIBfh0U\" //Access key to make API calls to Unsplash\n\n});\nexport default function SearchPhotos(keyword, page, per_page, filters) {\n  _s();\n\n  const [query, setQuery] = useState(\"\"); //Defining the State\n\n  const [pics, setPics] = useState([]);\n\n  const searchPhotos = async e => {\n    e.preventDefault();\n    unsplash.search.photos(query, 1, 1000).then(toJson).then(json => {\n      setPics(json.results);\n    });\n    console.log(\"Submitting the Form\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchPhotos,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: [\" \", \"\\uD83D\\uDCF7\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // This is our Search Field\n        type: \"text\" //The search input will be a string\n        ,\n        name: \"query\",\n        className: \"input\",\n        placeholder: `Try \"dog\" or \"apple\"`,\n        value: query,\n        onChange: e => setQuery(e.target.value) //This will update the state of our value\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card--image\",\n          alt: pic.alt_description //alt desctription of the image\n          ,\n          src: pic.urls.full //path of the image\n          ,\n          width: \"50%\",\n          height: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchPhotos, \"26Am0YUIOhi/BICIMXvyiuPKf5I=\");\n\n_c = SearchPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPhotos\");","map":{"version":3,"sources":["/Users/carlosabreu/Desktop/react-photo-search/src/searchPhotos.js"],"names":["React","useState","Unsplash","toJson","unsplash","accessKey","SearchPhotos","keyword","page","per_page","filters","query","setQuery","pics","setPics","searchPhotos","e","preventDefault","search","photos","then","json","results","console","log","target","value","map","pic","alt_description","urls","full"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,IAAkBC,MAAlB,QAAgC,aAAhC,C,CAEC;;AAED,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;AAC1BG,EAAAA,SAAS,EAAE,6CADe,CACgC;;AADhC,CAAb,CAAjB;AAIA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;AAAA;;AACnE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CADmE,CAC3B;;AACxC,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,QAAQ,CAACc,MAAT,CACCC,MADD,CACQR,KADR,EACe,CADf,EACkB,IADlB,EAECS,IAFD,CAEMjB,MAFN,EAGCiB,IAHD,CAGOC,IAAD,IAAU;AACZP,MAAAA,OAAO,CAACO,IAAI,CAACC,OAAN,CAAP;AAEH,KAND;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GAVD;;AAWF,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAET,YAAjC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC,OAAjC;AAAA,mBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO;AACL,QAAA,IAAI,EAAC,MADP,CACc;AADd;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,WAAW,EAAG,sBAJhB;AAKE,QAAA,KAAK,EAAEJ,KALT;AAME,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV,CAN3B,CAM6C;;AAN7C;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEIb,IAAI,CAACc,GAAL,CAAUC,GAAD,iBAAS;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACd;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,GAAG,EAAEA,GAAG,CAACC,eAFX,CAE4B;AAF5B;AAGE,UAAA,GAAG,EAAED,GAAG,CAACE,IAAJ,CAASC,IAHhB,CAGsB;AAHtB;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFJ;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAgCD;;GAhDuBzB,Y;;KAAAA,Y","sourcesContent":["// import React from \"react\";\nimport React, { useState } from 'react';\nimport Unsplash, {toJson } from 'unsplash-js';\n\n //toJson is a helper function in the unsplash-js library that is used to convert the response into JSON format.\n\nconst unsplash = new Unsplash({\n    accessKey: \"fh5tKV6AI5-k6RljpGlqQVWy8z0aVe7PZzlmKIBfh0U\", //Access key to make API calls to Unsplash\n});\n\nexport default function SearchPhotos(keyword, page, per_page, filters) {\n    const [query, setQuery] = useState(\"\"); //Defining the State\n    const [pics, setPics] = useState([]);\n    \n\n    const searchPhotos = async (e) => {\n        e.preventDefault();\n        unsplash.search\n        .photos(query, 1, 1000)\n        .then(toJson)\n        .then((json) => {\n            setPics(json.results);\n           \n        });\n        console.log(\"Submitting the Form\")\n    };\n  return (\n    <>\n      <form className=\"form\" onSubmit={searchPhotos}>\n        <label className=\"label\" htmlFor=\"query\">\n          {\" \"}\n          ðŸ“·\n        </label>\n        <input // This is our Search Field\n          type=\"text\" //The search input will be a string\n          name=\"query\" \n          className=\"input\"\n          placeholder={`Try \"dog\" or \"apple\"`}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)} //This will update the state of our value\n        />\n        <button type=\"submit\" className=\"button\">Search</button>\n      </form>\n      <div className=\"card-list\">\n          {\n          pics.map((pic) => <div className=\"card\">\n              <img\n                className=\"card--image\"\n                alt={pic.alt_description} //alt desctription of the image\n                src={pic.urls.full} //path of the image\n                width=\"50%\"\n                height=\"50%\"\n                ></img>\n          </div>)\n          }\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}