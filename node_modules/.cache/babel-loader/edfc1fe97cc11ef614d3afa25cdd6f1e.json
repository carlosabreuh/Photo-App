{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carlosabreu/Desktop/react-photo-search/src/searchPhotos.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\nimport React, { useState } from 'react';\nimport Unsplash, { toJson } from 'unsplash-js'; //toJson is a helper function in the unsplash-js library that is used to convert the response into JSON format.\n\nconst unsplash = new Unsplash({\n  accessKey: \"fh5tKV6AI5-k6RljpGlqQVWy8z0aVe7PZzlmKIBfh0U\" //Access key to make API calls to Unsplash\n\n});\nexport default function SearchPhotos() {\n  _s();\n\n  const [query, setQuery] = useState(\"\"); //Defining the State\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: [\" \", \"\\uD83D\\uDCF7\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // This is our Search Field\n        type: \"text\" //The search input will be a string\n        ,\n        name: \"query\",\n        className: \"input\",\n        placeholder: `Try \"dog\" or \"apple\"`,\n        value: query,\n        onChange: e => setQuery(e.target.value) //This will update the state of our value\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchPhotos, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n\n_c = SearchPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPhotos\");","map":{"version":3,"sources":["/Users/carlosabreu/Desktop/react-photo-search/src/searchPhotos.js"],"names":["React","useState","Unsplash","toJson","unsplash","accessKey","SearchPhotos","query","setQuery","e","target","value"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,IAAkBC,MAAlB,QAAgC,aAAhC,C,CAEC;;AAED,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;AAC1BG,EAAAA,SAAS,EAAE,6CADe,CACgC;;AADhC,CAAb,CAAjB;AAIA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADmC,CACI;;AAEzC,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC,OAAjC;AAAA,mBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO;AACL,QAAA,IAAI,EAAC,MADP,CACc;AADd;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,WAAW,EAAG,sBAJhB;AAKE,QAAA,KAAK,EAAEM,KALT;AAME,QAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAN3B,CAM6C;;AAN7C;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD;;GAtBuBL,Y;;KAAAA,Y","sourcesContent":["// import React from \"react\";\nimport React, { useState } from 'react';\nimport Unsplash, {toJson } from 'unsplash-js';\n\n //toJson is a helper function in the unsplash-js library that is used to convert the response into JSON format.\n\nconst unsplash = new Unsplash({\n    accessKey: \"fh5tKV6AI5-k6RljpGlqQVWy8z0aVe7PZzlmKIBfh0U\", //Access key to make API calls to Unsplash\n});\n\nexport default function SearchPhotos() {\n    const [query, setQuery] = useState(\"\") //Defining the State\n    \n  return (\n    <>\n      <form className=\"form\">\n        <label className=\"label\" htmlFor=\"query\">\n          {\" \"}\n          ðŸ“·\n        </label>\n        <input // This is our Search Field\n          type=\"text\" //The search input will be a string\n          name=\"query\" \n          className=\"input\"\n          placeholder={`Try \"dog\" or \"apple\"`}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)} //This will update the state of our value\n        />\n        <button type=\"submit\" className=\"button\">Search</button>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}